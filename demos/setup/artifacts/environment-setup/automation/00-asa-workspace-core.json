{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueSuffix": {
      "type": "String",
      "metadata": {
        "description": "Suffix added to all resource name to make them unique."
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Password for SQL Admin"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
       "allowedValues": [
        "westus2",
        "eastus",
        "northeurope",
        "westeurope",
        "southeastasia",
        "australiaeast",
        "westcentralus"
      ],
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "streamingDataset":{
        "defaultValue":"Tweetsout",
         "type":"String"
      },
      "pbiWorkspaceId":{
         
         "type":"String",
        "metadata": {
        "description": "Power BI workspace ID"
      }
      },
    "eventHubName":{
         "type":"string",
         "metadata":{
            "description":"Specifies a project name that is used to generate the Event Hub name."
         },
         "defaultValue":"tweetsin"
      },
    "asaName":{
         "defaultValue":"TweetsASA",
         "type":"String",
      "metadata": {
        "description": "Stream analytics job name."
      }
      }
  },
  "variables": {
    "location": "[parameters('location')]",
    "sqlAdministratorLogin": "asaexp.sql.admin",
    "workspaceName": "[concat('asaexpworkspace', parameters('uniqueSuffix'))]",
    "adlsStorageAccountName": "[concat('asaexpdatalake', parameters('uniqueSuffix'))]",
    "defaultDataLakeStorageFilesystemName": "tempdata",
    "sqlComputeName": "SQLPool01",
    "sparkComputeName": "SparkPool01",
    "computeSubnetId": "",
    "sqlServerSKU": "DW500c",
    "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('adlsStorageAccountName'), '.dfs.core.windows.net')]",
    "sparkAutoScaleEnabled": "true",
    "sparkMinNodeCount": "3",
    "sparkMaxNodeCount": "4",
    "sparkNodeCount": "0",
    "sparkNodeSizeFamily": "MemoryOptimized",
    "sparkNodeSize": "Small",
    "sparkAutoPauseEnabled": "true",
    "sparkAutoPauseDelayInMinutes": "15",
    "sparkVersion": "2.4",
    "packagesRequirementsFileName": "requirements.txt",
    "packagesRequirementsContent": "seaborn==0.10.1\nxgboost==1.0.2\nonnxruntime==1.0.0\nwerkzeug==0.16.1\nnimbusml==1.7.1\nruamel.yaml==0.16.9\nazureml-train-automl-runtime==1.6.0\nscikit-learn==0.20.3\nnumpy==1.16.2\npandas==0.23.4\nscipy==1.4.1",
    "keyVaultName": "[concat('asaexpkeyvault', parameters('uniqueSuffix'))]",
    "blobStorageAccountName": "[concat('asaexpstore', parameters('uniqueSuffix'))]",
    "applicationInsightsName": "[concat('asaexpappinsights', parameters('uniqueSuffix'))]",
    "amlWorkspaceName": "[concat('amlworkspace', parameters('uniqueSuffix'))]",
    "eventHubNameSpace":"[concat('eventhub',parameters('uniqueSuffix'))]",
	  "managedAccessPolicyName":"ManageAccessPolicy",
      "authRuleResourceId":"[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubNameSpace'), variables('managedAccessPolicyName'))]",
      "location_azure_function_ase_name":"[concat('locfunction',parameters('uniqueSuffix'))]",
      "location_azure_function_storage_name":"[concat('locfunction',parameters('uniqueSuffix'))]",
      "location_azure_function_ai_name":"[concat('locfunction',parameters('uniqueSuffix'))]",
      "location_azure_function_functions_app_name":"[concat('locfunction',parameters('uniqueSuffix'))]",
      "twitter_azure_function_ase_name":"[concat('twifunction',parameters('uniqueSuffix'))]",
      "twitter_azure_function_storage_name":"[concat('twifunction',parameters('uniqueSuffix'))]",
      "twitter_azure_function_ai_name":"[concat('twifunction',parameters('uniqueSuffix'))]",
      "twitter_azure_function_functions_app_name":"[concat('twifunction',parameters('uniqueSuffix'))]",
	  "asaQuery":"SELECT System.Timestamp as Time,topic as Hashtag,Text as Tweet,City,UserName,RetweetCount,FavouriteCount,Sentiment,SentimentScore,IsRetweet,HourOfDay,Language INTO [tweetsout] FROM [tweetsin]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[variables('blobStorageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "accessPolicies": [
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('adlsStorageAccountName')]",
      "location": "[variables('location')]",
      "dependsOn": [
      ],
      "tags": {
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": "true",
        "isHnsEnabled": "true",
        "largeFileSharesState": "Disabled"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        }
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2019-06-01-preview",
      "name": "[variables('workspaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'), '/blobServices/default/containers/', variables('defaultDataLakeStorageFilesystemName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
          "filesystem": "[variables('defaultDataLakeStorageFilesystemName')]"
        },
        "virtualNetworkProfile": {
          "computeSubnetId": "[variables('computeSubnetId')]"
        },
        "sqlAdministratorLogin": "[variables('sqlAdministratorLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2019-06-01-preview",
          "name": "allowAll",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[concat(variables('adlsStorageAccountName'), '/default/', variables('defaultDataLakeStorageFilesystemName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'))))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
        "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'), '2'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
        "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
      ],
      "properties": {
        "nodeCount": "[variables('sparkNodeCount')]",
        "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
        "nodeSize": "[variables('sparkNodeSize')]",
        "autoScale": {
          "enabled": "[variables('sparkAutoScaleEnabled')]",
          "minNodeCount": "[variables('sparkMinNodeCount')]",
          "maxNodeCount": "[variables('sparkMaxNodeCount')]"
        },
        "autoPause": {
          "enabled": "[variables('sparkAutoPauseEnabled')]",
          "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
        },
        "sparkVersion": "[variables('sparkVersion')]",
        "libraryRequirements": {
          "filename": "[variables('packagesRequirementsFileName')]",
          "content": "[variables('packagesRequirementsContent')]"
        }
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('workspaceName'), '/', variables('sqlComputeName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]",
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'), '/bigDataPools/', variables('sparkComputeName'))]"
      ],
      "sku": {
        "name": "[variables('sqlServerSKU')]"
      },
      "properties": {
        "createMode": "Default",
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('applicationInsightsName')]",
      "location": "[if(or(equals(variables('location'),'eastus2'),equals(variables('location'),'westcentralus')),'southcentralus',variables('location'))]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2019-11-01",
      "name": "[variables('amlWorkspaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "sku": {
        "tier": "Enterprise",
        "name": "Enterprise"
      },
      "identity": {
        "type": "systemAssigned"
      },
      "properties": {
        "friendlyName": "[variables('amlWorkspaceName')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults',variables('keyVaultName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components',variables('applicationInsightsName'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts/',variables('blobStorageAccountName'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default/twitterdata')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
         "type":"Microsoft.EventHub/namespaces",
         "apiVersion":"2018-01-01-preview",
         "name":"[variables('eventHubNameSpace')]",
         "location":"Central US",
         "sku":{
            "name":"Standard",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "zoneRedundant":false,
            "isAutoInflateEnabled":false,
            "maximumThroughputUnits":0,
            "kafkaEnabled":true
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs",
         "apiVersion":"2019-06-01",
         "name":"[parameters('asaName')]",
         "location":"Central US",
		 "identity": {
				"type": "SystemAssigned"
			},
         "properties":{
            "sku":{
               "name":"Standard"
            },	
            "eventsOutOfOrderPolicy":"Adjust",
            "outputErrorPolicy":"Stop",
            "eventsOutOfOrderMaxDelayInSeconds":0,
            "eventsLateArrivalMaxDelayInSeconds":5,
            "dataLocale":"en-US"
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/AuthorizationRules",
         "apiVersion":"2017-04-01",
         "name":"[concat(variables('eventHubNameSpace'), '/',variables('managedAccessPolicyName'))]",
         "location":"Central US",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNameSpace'))]"
         ],
         "properties":{
            "rights":[
               "Manage",
               "Listen",
               "Send"
            ]
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/AuthorizationRules",
         "apiVersion":"2017-04-01",
         "name":"[concat(variables('eventHubNameSpace'), '/RootManageSharedAccessKey')]",
         "location":"Central US",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNameSpace'))]"
         ],
         "properties":{
            "rights":[
               "Listen",
               "Manage",
               "Send"
            ]
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/eventhubs",
         "apiVersion":"2017-04-01",
         "name":"[concat(variables('eventHubNamespace'), '/', parameters('eventHubName'))]",
         "location":"Central US",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
         ],
         "properties":{
            "messageRetentionInDays":1,
            "partitionCount":8,
            "status":"Active"
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/networkRuleSets",
         "apiVersion":"2018-01-01-preview",
         "name":"[concat(variables('eventHubNamespace'), '/default')]",
         "location":"Central US",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
         ],
         "properties":{
            "defaultAction":"Deny",
            "virtualNetworkRules":[

            ],
            "ipRules":[

            ]
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(parameters('asaName'), '/',parameters('eventHubName'))]",
         "dependsOn":[
            "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('asaName'))]",
			"[resourceId('Microsoft.EventHub/namespaces/AuthorizationRules', variables('eventHubNameSpace'),variables('managedAccessPolicyName'))]"
			
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.ServiceBus/EventHub",
               "properties":{
                  "consumerGroupName":"TweetsASA_tweetsin_consumer_group",
                  "eventHubName":"[parameters('eventHubName')]",
                  "serviceBusNamespace":"[variables('eventHubNameSpace')]",
                  "sharedAccessPolicyName":"[variables('managedAccessPolicyName')]",
                  "sharedAccessPolicyKey":"[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryKey]"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(parameters('asaName'), '/tweetsout')]",
         "dependsOn":[
            "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('asaName'))]"
         ],
         "properties":{
            "datasource":{
               "type":"PowerBI",
               "properties":{
                  "dataset":"[parameters('streamingDataset')]",
                  "table":"Tweets",
                  "groupId":"[parameters('pbiWorkspaceId')]",
                  "authenticationMode":"Msi"
               }
            }
         }
      },
	  {
      "type": "Microsoft.StreamAnalytics/streamingjobs/transformations",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('asaName'), '/query')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('asaName'))]"
      ],
      "properties": {
        "streamingUnits": 6,
        "query": "[variables('asaQuery')]"
      }
    },
      {
         "type":"Microsoft.EventHub/namespaces/eventhubs/consumergroups",
         "apiVersion":"2017-04-01",
         "name":"[concat(variables('eventHubNamespace'), '/', parameters('eventHubName'),'/$Default')]",
         "location":"Central US",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), parameters('eventHubName'))]",
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
         ],
         "properties":{

         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/eventhubs/consumergroups",
         "apiVersion":"2017-04-01",
         "name":"[concat(variables('eventHubNamespace'), '/', parameters('eventHubName'),'/tweetsasa_tweetsin_consumer_group')]",
         "location":"Central US",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), parameters('eventHubName'))]",
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
         ],
         "properties":{

         }
      },
      {
         "name":"[variables('location_azure_function_storage_name')]",
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "kind":"Storage",
         "properties":{

         }
      },
      {
         "name":"[variables('location_azure_function_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[parameters('location')]",
         "properties":{
            "name":"[variables('location_azure_function_ase_name')]",
            "computeMode":"Dynamic"
         },
         "sku":{
            "name":"Y1",
            "tier":"Dynamic"
         }
      },
      {
         "name":"[variables('location_azure_function_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('location_azure_function_functions_app_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"functionapp",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Insights/components', toLower(variables('location_azure_function_ai_name')))]",
            "[resourceId('Microsoft.Web/serverfarms', toLower(variables('location_azure_function_ase_name')))]",
            "[resourceId('Microsoft.Storage/storageAccounts', toLower(variables('location_azure_function_storage_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('location_azure_function_functions_app_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('location_azure_function_functions_app_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('location_azure_function_ase_name'))]",
            "reserved":false,
            "siteConfig":{
               "netFrameworkVersion":"v4.0",
               "appSettings":[
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('location_azure_function_storage_name'), ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('location_azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('location_azure_function_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('location_azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('location_azure_function_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('location_azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('location_azure_function_ai_name'))).InstrumentationKey]"
                  },
                  {
                     "name":"APPLICATIONINSIGHTS_CONNECTION_STRING",
                     "value":"[concat('InstrumentationKey=',reference(resourceId('Microsoft.Insights/components', variables('location_azure_function_ai_name'))).InstrumentationKey)]"
                  },
                  {
                     "name":"ENABLE_ORYX_BUILD",
                     "value":"false"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"dotnet"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~2"
                  },
                  {
                     "name":"PowerBIStreamingDatasetURI",
                     "value":""
                  },
                  {
                     "name":"WEBSITE_RUN_FROM_PACKAGE",
                     "value":""
                  }
               ],
               "use32BitWorkerProcess":true,
               "managedPipelineMode":"Integrated",
               "cors":{
                  "allowedOrigins":[
                     "https://functions.azure.com",
                     "https://functions-staging.azure.com",
                     "https://functions-next.azure.com"
                  ],
                  "supportCredentials":false
               }
            },
            "containerSize":1536,
            "httpsOnly":false
         }
      },
      {
         "name":"[variables('twitter_azure_function_storage_name')]",
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "kind":"Storage",
         "properties":{

         }
      },
      {
         "name":"[variables('twitter_azure_function_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[parameters('location')]",
         "properties":{
            "name":"[variables('twitter_azure_function_ase_name')]",
            "computeMode":"Dynamic"
         },
         "sku":{
            "name":"Y1",
            "tier":"Dynamic"
         }
      },
      {
         "name":"[variables('twitter_azure_function_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('twitter_azure_function_functions_app_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"functionapp",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Insights/components', toLower(variables('twitter_azure_function_ai_name')))]",
            "[resourceId('Microsoft.Web/serverfarms', toLower(variables('twitter_azure_function_ase_name')))]",
            "[resourceId('Microsoft.Storage/storageAccounts', toLower(variables('twitter_azure_function_storage_name')))]",
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNameSpace'))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('twitter_azure_function_functions_app_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('twitter_azure_function_functions_app_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('twitter_azure_function_ase_name'))]",
            "reserved":false,
            "siteConfig":{
               "netFrameworkVersion":"v4.0",
               "appSettings":[
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('twitter_azure_function_storage_name'), ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('twitter_azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('twitter_azure_function_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('twitter_azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('twitter_azure_function_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('twitter_azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('twitter_azure_function_ai_name'))).InstrumentationKey]"
                  },
                  {
                     "name":"APPLICATIONINSIGHTS_CONNECTION_STRING",
                     "value":"[concat('InstrumentationKey=',reference(resourceId('Microsoft.Insights/components', variables('twitter_azure_function_ai_name'))).InstrumentationKey)]"
                  },
                  {
                     "name":"ENABLE_ORYX_BUILD",
                     "value":"false"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"dotnet"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~2"
                  },
                  {
                     "name":"TwitterAccessToken",
                     "value":""
                  },
                  {
                     "name":"TwitterAccessTokenSecret",
                     "value":""
                  },
                  {
                     "name":"TwitterConsumerKey",
                     "value":""
                  },
                  {
                     "name":"TwitterConsumerKeySecret",
                     "value":""
                  },
                  {
                     "name":"TwitterKeywords",
                     "value":""
                  },
                  {
                     "name":"Sentiment140AppID",
                     "value":""
                  },
                  {
                     "name":"SentimentAnalysisApiKey",
                     "value":"fy6xSoKfX9ELRq8q6/PUL0KZWHmR6sJf0MaExsbW8U1Syw40oEIYEfNtBB9cuz4oe/EYnWXbX1MxTX5kaUwpLQ=="
                  },
                  {
                     "name":"SentimentAnalysisUri",
                     "value":"https://ussouthcentral.services.azureml.net/workspaces/af0154570b4d403ba1928177fe024c39/services/760226ddefd046cebd21c06d4babd5d5/execute?api-version=2.0"
                  },
                  {
                     "name":"ServiceBusConnectionString",
                     "value":"[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                  },
                  {
                     "name":"EventHubName",
                     "value":"[parameters('EventHubName')]"
                  },
                  {
                     "name":"FoulWords",
                     "value":"fuck,wtf,suck,jerk,unknown"
                  },
                  {
                     "name":"WEBSITE_RUN_FROM_PACKAGE",
                     "value":""
                  }
               ],
               "use32BitWorkerProcess":true,
               "managedPipelineMode":"Integrated",
               "cors":{
                  "allowedOrigins":[
                     "https://functions.azure.com",
                     "https://functions-staging.azure.com",
                     "https://functions-next.azure.com"
                  ],
                  "supportCredentials":false
               }
            },
            "containerSize":1536,
            "httpsOnly":false
         }
      }
  ],
  "outputs": {
  }
}
